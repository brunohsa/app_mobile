{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _formik = require(\"formik\");\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _reactNativeRouterFlux = require(\"react-native-router-flux\");\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\caka-\\\\Documents\\\\Projetos\\\\app\\\\src\\\\components\\\\login_cadastro\\\\ModalCadastroLogin.js\";\n\nfunction goToMain() {\n  _reactNativeRouterFlux.Actions.index();\n}\n\nfunction renderLogin() {\n  var email = (0, _react.useRef)(null);\n  var senha = (0, _react.useRef)(null);\n  var FormSchema = Yup.object().shape({\n    email: Yup.string().required('Campo obrigatório'),\n    senha: Yup.string().required('Campo obrigatório').min(8, 'Digite pelo menos 8 caracteres').matches('^(?=.[0-9])(?=.[a-z])(?=.[A-Z])(?=.*[@#$%!:()\\\\-_?&])(?=\\\\S+$)')\n  });\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: {\n      email: '',\n      senha: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    validationSchema: FormSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        handleSubmit = _ref.handleSubmit,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        setFieldTouched = _ref.setFieldTouched;\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.modalView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Entrar\"), _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativePaper.TextInput, {\n      ref: email,\n      label: \"E-mail\",\n      keyboardType: \"email-address\",\n      placeholder: \"Digite o seu e-mail\",\n      left: function left(props) {\n        return _react.default.createElement(_reactNativePaper.TextInput.Icon, (0, _extends2.default)({}, props, {\n          icon: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 30\n          }\n        }));\n      },\n      icon: \"email\",\n      value: values.email,\n      onChangeText: handleChange('email'),\n      onBlur: function onBlur() {\n        return setFieldTouched('email', true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), errors.email && touched.email && _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    }, errors.email), _react.default.createElement(_reactNativePaper.TextInput, {\n      ref: senha,\n      label: \"Senha\",\n      secureTextEntry: true,\n      placeholder: \"Digite a senha\",\n      value: values.senha,\n      left: function left(props) {\n        return _react.default.createElement(_reactNativePaper.TextInput.Icon, (0, _extends2.default)({}, props, {\n          icon: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }\n        }));\n      },\n      icon: \"lock\",\n      onChangeText: handleChange('senha'),\n      onBlur: function onBlur() {\n        return setFieldTouched('senha', true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), errors.senha && touched.senha && _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 47\n      }\n    }, errors.senha), _react.default.createElement(_reactNativeElements.Button, {\n      title: \"Fazer login\",\n      raised: true,\n      type: \"solid\",\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativeElements.Button, {\n      title: \"            Entrar pelo Facebook            \",\n      raised: true,\n      type: \"solid\",\n      onPress: function onPress() {\n        return goToMain();\n      },\n      icon: _react.default.createElement(_FontAwesome.default, {\n        name: \"facebook-square\",\n        color: \"white\",\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\nfunction renderCadastro() {\n  var email = (0, _react.useRef)(null);\n  var user = (0, _react.useRef)(null);\n  var senha = (0, _react.useRef)(null);\n  var FormSchema = Yup.object().shape({\n    email: Yup.string().required('Campo obrigatório').matches('^[A-Za-z](.*)([@]{1})(.{1,})(\\\\.)(.{1,})'),\n    user: Yup.string().required('Campo obrigatório'),\n    senha: Yup.string().required('Campo obrigatório').min(8, 'Digite pelo menos 8 caracteres')\n  });\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: {\n      email: '',\n      user: '',\n      senha: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    validationSchema: FormSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        setFieldTouched = _ref2.setFieldTouched;\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.modalView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"Cadastro\"), _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativePaper.TextInput, {\n      ref: email,\n      label: \"E-mail\",\n      keyboardType: \"email-address\",\n      placeholder: \"Digite o seu e-mail\",\n      left: function left(props) {\n        return _react.default.createElement(_reactNativePaper.TextInput.Icon, (0, _extends2.default)({}, props, {\n          icon: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 30\n          }\n        }));\n      },\n      icon: \"email\",\n      value: values.email,\n      onChangeText: handleChange('email'),\n      onBlur: function onBlur() {\n        return setFieldTouched('email', true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), errors.email && touched.email && _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 47\n      }\n    }, errors.email), _react.default.createElement(_reactNativePaper.TextInput, {\n      ref: user,\n      label: \"Nome\",\n      secureTextEntry: true,\n      placeholder: \"Digite seu nome\",\n      value: values.user,\n      left: function left(props) {\n        return _react.default.createElement(_reactNativePaper.TextInput.Icon, (0, _extends2.default)({}, props, {\n          icon: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 30\n          }\n        }));\n      },\n      icon: \"user\",\n      onChangeText: handleChange('user'),\n      onBlur: function onBlur() {\n        return setFieldTouched('user', true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), errors.user && touched.user && _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, errors.user), _react.default.createElement(_reactNativePaper.TextInput, {\n      ref: senha,\n      label: \"Senha\",\n      secureTextEntry: true,\n      placeholder: \"Digite a senha\",\n      value: values.senha,\n      left: function left(props) {\n        return _react.default.createElement(_reactNativePaper.TextInput.Icon, (0, _extends2.default)({}, props, {\n          icon: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 30\n          }\n        }));\n      },\n      icon: \"lock\",\n      onChangeText: handleChange('senha'),\n      onBlur: function onBlur() {\n        return setFieldTouched('senha', true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), errors.senha && touched.senha && _react.default.createElement(_reactNativeElements.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 47\n      }\n    }, errors.senha), _react.default.createElement(_reactNativeElements.Button, {\n      title: \"Fazer cadastro\",\n      raised: true,\n      type: \"solid\",\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativeElements.Button, {\n      title: \"         Cadastre-se pelo Facebook         \",\n      raised: true,\n      type: \"solid\",\n      onPress: function onPress() {\n        return goToMain();\n      },\n      containerStyle: {\n        position: 'relative'\n      },\n      iconContainerStyle: {\n        position: 'absolute',\n        right: 20\n      },\n      icon: _react.default.createElement(_FontAwesome.default, {\n        name: \"facebook-square\",\n        color: \"white\",\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\nfunction ModalLoginCadastro(props) {\n  if (props.opc == 'login') {\n    return renderLogin();\n  } else if (props.opc == 'cadastro') {\n    return renderCadastro();\n  }\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    backgroundColor: '#f00',\n    padding: 8,\n    borderRadius: 8,\n    elevation: 3,\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowColor: '#000',\n    shadowOpacity: 1,\n    shadowRadius: 2\n  },\n  buttonText: {\n    color: '#fff',\n    alignSelf: 'center',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  modalView: {\n    justifyContent: 'flex-end',\n    width: '100%',\n    height: '70%',\n    borderRadius: 15,\n    backgroundColor: '#fff',\n    padding: 30,\n    margin: 0\n  }\n});\n\nvar theme = {\n  Button: {\n    buttonStyle: {\n      marginTop: 5,\n      backgroundColor: 'red',\n      padding: 10\n    },\n    Icon: {\n      iconStyle: {}\n    }\n  }\n};\nvar _default = ModalLoginCadastro;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/caka-/Documents/Projetos/app/src/components/login_cadastro/ModalCadastroLogin.js"],"names":["goToMain","Actions","index","renderLogin","email","senha","FormSchema","Yup","object","shape","string","required","min","matches","values","console","log","handleChange","handleSubmit","errors","touched","setFieldTouched","styles","modalView","marginTop","props","renderCadastro","user","position","right","ModalLoginCadastro","opc","StyleSheet","create","button","flexDirection","backgroundColor","padding","borderRadius","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","buttonText","color","alignSelf","fontSize","fontWeight","justifyContent","margin","theme","Button","buttonStyle","Icon","iconStyle"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, {Component, useRef} from 'react';\r\nimport {View, StyleSheet} from 'react-native';\r\nimport {Text, Button, Input, ThemeProvider} from 'react-native-elements';\r\nimport {Formik} from 'formik';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {TextInput} from 'react-native-paper';\r\nimport {Actions} from 'react-native-router-flux';\r\nimport * as Yup from 'yup';\r\n\r\nfunction goToMain() {\r\n  Actions.index();\r\n}\r\n\r\nfunction renderLogin() {\r\n  const email = useRef(null);\r\n  const senha = useRef(null);\r\n\r\n  const FormSchema = Yup.object().shape({\r\n    email: Yup.string().required('Campo obrigatório'),\r\n    senha: Yup.string()\r\n      .required('Campo obrigatório')\r\n      .min(8, 'Digite pelo menos 8 caracteres')\r\n      .matches(\r\n        '^(?=.[0-9])(?=.[a-z])(?=.[A-Z])(?=.*[@#$%!:()\\\\-_?&])(?=\\\\S+$)',\r\n      ),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        senha: '',\r\n      }}\r\n      onSubmit={values => {\r\n        console.log(values);\r\n      }}\r\n      validationSchema={FormSchema}>\r\n      {({\r\n        values,\r\n        handleChange,\r\n        handleSubmit,\r\n        errors,\r\n        touched,\r\n        setFieldTouched,\r\n      }) => (\r\n        <View style={styles.modalView}>\r\n          <Text>Entrar</Text>\r\n          <View style={{marginTop: 15}}>\r\n            <TextInput\r\n              ref={email}\r\n              label=\"E-mail\"\r\n              keyboardType=\"email-address\"\r\n              placeholder=\"Digite o seu e-mail\"\r\n              left={props => <TextInput.Icon {...props} icon=\"email\" />}\r\n              icon=\"email\"\r\n              value={values.email}\r\n              onChangeText={handleChange('email')}\r\n              onBlur={() => setFieldTouched('email', true)}\r\n            />\r\n            {errors.email && touched.email && <Text>{errors.email}</Text>}\r\n            <TextInput\r\n              ref={senha}\r\n              label=\"Senha\"\r\n              secureTextEntry\r\n              placeholder=\"Digite a senha\"\r\n              value={values.senha}\r\n              left={props => <TextInput.Icon {...props} icon=\"lock\" />}\r\n              icon=\"lock\"\r\n              onChangeText={handleChange('senha')}\r\n              onBlur={() => setFieldTouched('senha', true)}\r\n            />\r\n            {errors.senha && touched.senha && <Text>{errors.senha}</Text>}\r\n            <Button\r\n              title=\"Fazer login\"\r\n              raised\r\n              type=\"solid\"\r\n              onPress={handleSubmit}\r\n              //onPress={() => goToMain()}\r\n            />\r\n          </View>\r\n          <View style={{marginTop: 15}}>\r\n            <Button\r\n              title=\"            Entrar pelo Facebook            \"\r\n              raised\r\n              type=\"solid\"\r\n              onPress={() => goToMain()}\r\n              icon={<Icon name=\"facebook-square\" color=\"white\" size={20} />}\r\n            />\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nfunction renderCadastro() {\r\n  const email = useRef(null);\r\n  const user = useRef(null);\r\n  const senha = useRef(null);\r\n\r\n  const FormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required('Campo obrigatório')\r\n      .matches('^[A-Za-z](.*)([@]{1})(.{1,})(\\\\.)(.{1,})'),\r\n    user: Yup.string().required('Campo obrigatório'),\r\n    senha: Yup.string()\r\n      .required('Campo obrigatório')\r\n      .min(8, 'Digite pelo menos 8 caracteres'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        user: '',\r\n        senha: '',\r\n      }}\r\n      onSubmit={values => {\r\n        console.log(values);\r\n      }}\r\n      validationSchema={FormSchema}>\r\n      {({\r\n        values,\r\n        handleChange,\r\n        handleSubmit,\r\n        errors,\r\n        touched,\r\n        setFieldTouched,\r\n      }) => (\r\n        <View style={styles.modalView}>\r\n          <Text>Cadastro</Text>\r\n          <View style={{marginTop: 15}}>\r\n            <TextInput\r\n              ref={email}\r\n              label=\"E-mail\"\r\n              keyboardType=\"email-address\"\r\n              placeholder=\"Digite o seu e-mail\"\r\n              left={props => <TextInput.Icon {...props} icon=\"email\" />}\r\n              icon=\"email\"\r\n              value={values.email}\r\n              onChangeText={handleChange('email')}\r\n              onBlur={() => setFieldTouched('email', true)}\r\n            />\r\n            {errors.email && touched.email && <Text>{errors.email}</Text>}\r\n            <TextInput\r\n              ref={user}\r\n              label=\"Nome\"\r\n              secureTextEntry\r\n              placeholder=\"Digite seu nome\"\r\n              value={values.user}\r\n              left={props => <TextInput.Icon {...props} icon=\"user\" />}\r\n              icon=\"user\"\r\n              onChangeText={handleChange('user')}\r\n              onBlur={() => setFieldTouched('user', true)}\r\n            />\r\n            {errors.user && touched.user && <Text>{errors.user}</Text>}\r\n            <TextInput\r\n              ref={senha}\r\n              label=\"Senha\"\r\n              secureTextEntry\r\n              placeholder=\"Digite a senha\"\r\n              value={values.senha}\r\n              left={props => <TextInput.Icon {...props} icon=\"lock\" />}\r\n              icon=\"lock\"\r\n              onChangeText={handleChange('senha')}\r\n              onBlur={() => setFieldTouched('senha', true)}\r\n            />\r\n            {errors.senha && touched.senha && <Text>{errors.senha}</Text>}\r\n            <Button\r\n              title=\"Fazer cadastro\"\r\n              raised\r\n              type=\"solid\"\r\n              onPress={handleSubmit}\r\n              //onPress={() => goToMain()}\r\n            />\r\n          </View>\r\n          <View style={{marginTop: 15}}>\r\n            <Button\r\n              title=\"         Cadastre-se pelo Facebook         \"\r\n              raised\r\n              type=\"solid\"\r\n              onPress={() => goToMain()}\r\n              containerStyle={{position: 'relative'}}\r\n              iconContainerStyle={{position: 'absolute', right: 20}}\r\n              icon={<Icon name=\"facebook-square\" color=\"white\" size={20} />}\r\n            />\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nfunction ModalLoginCadastro(props) {\r\n  if (props.opc == 'login') {\r\n    return renderLogin();\r\n  } else if (props.opc == 'cadastro') {\r\n    return renderCadastro();\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f00',\r\n    padding: 8,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    shadowOffset: {width: 5, height: 5},\r\n    shadowColor: '#000',\r\n    shadowOpacity: 1,\r\n    shadowRadius: 2,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    alignSelf: 'center',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  modalView: {\r\n    justifyContent: 'flex-end',\r\n    width: '100%',\r\n    height: '70%',\r\n    borderRadius: 15,\r\n    backgroundColor: '#fff',\r\n    padding: 30,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nconst theme = {\r\n  Button: {\r\n    buttonStyle: {\r\n      marginTop: 5,\r\n      backgroundColor: 'red',\r\n      padding: 10,\r\n    },\r\n    Icon: {\r\n      iconStyle: {},\r\n    },\r\n  },\r\n};\r\n\r\nexport default ModalLoginCadastro;\r\n"]},"metadata":{},"sourceType":"script"}