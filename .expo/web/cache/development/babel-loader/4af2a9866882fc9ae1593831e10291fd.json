{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _navigationStore = _interopRequireDefault(require(\"./navigationStore\"));\n\nvar _pathParser = _interopRequireDefault(require(\"./pathParser\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\caka-\\\\Documents\\\\Projetos\\\\app\\\\node_modules\\\\react-native-router-flux\\\\src\\\\Router.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar App = function (_React$Component) {\n  (0, _inherits2.default)(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onBackPress = function () {\n      return _navigationStore.default.pop();\n    };\n\n    _this.handleDeepURL = function (e) {\n      return _this.parseDeepURL(e.url);\n    };\n\n    _this.parseDeepURL = function (url) {\n      if (!url) {\n        return;\n      }\n\n      var cleanUrl = _this.props.uriPrefix ? url.split(_this.props.uriPrefix)[1] : url;\n\n      if (!cleanUrl) {\n        return;\n      }\n\n      var allPaths = Object.values(_navigationStore.default.states).map(function (obj) {\n        return obj.path;\n      }).filter(function (path) {\n        return path;\n      });\n      var parsedPath = (0, _pathParser.default)(cleanUrl, allPaths);\n\n      if (!parsedPath) {\n        return;\n      }\n\n      var path = parsedPath.path,\n          params = parsedPath.params;\n      var actionKey = Object.entries(_navigationStore.default.states).filter(function (_ref) {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n            value = _ref2[1];\n\n        return value.path === path;\n      }).map(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),\n            key = _ref4[0];\n\n        return key;\n      }).find(function (key) {\n        return key;\n      });\n\n      if (_this.props.onDeepLink) {\n        _this.props.onDeepLink({\n          url: url,\n          action: actionKey,\n          params: params\n        });\n      } else if (actionKey && _navigationStore.default[actionKey]) {\n        _navigationStore.default[actionKey](params);\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      _reactNative.BackHandler.addEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);\n\n      _reactNative.Linking.getInitialURL().then(function (url) {\n        return _this2.parseDeepURL(url);\n      });\n\n      _reactNative.Linking.addEventListener('url', this.handleDeepURL);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);\n\n      _reactNative.Linking.removeEventListener('url', this.handleDeepURL);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          state = _this$props.state,\n          AppNavigator = _this$props.navigator;\n\n      if (dispatch && state) {\n        _navigationStore.default.externalDispatch = dispatch;\n        _navigationStore.default.externalState = state;\n        return _react.default.createElement(AppNavigator, {\n          dispatch: _navigationStore.default.dispatch,\n          state: _navigationStore.default.state,\n          ref: function ref(navigatorRef) {\n            _navigationStore.default.setTopLevelNavigator(navigatorRef);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return _react.default.createElement(AppNavigator, {\n        onNavigationStateChange: _navigationStore.default.onNavigationStateChange,\n        ref: function ref(navigatorRef) {\n          _navigationStore.default.setTopLevelNavigator(navigatorRef);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return App;\n}(_react.default.Component);\n\nApp.propTypes = {\n  navigator: _propTypes.default.func,\n  backAndroidHandler: _propTypes.default.func,\n  uriPrefix: _propTypes.default.string,\n  onDeepLink: _propTypes.default.func\n};\nApp.defaultProps = {\n  navigator: null,\n  backAndroidHandler: null,\n  uriPrefix: null,\n  onDeepLink: null\n};\n\nvar Router = function Router(_ref5) {\n  var createReducer = _ref5.createReducer,\n      sceneStyle = _ref5.sceneStyle,\n      onStateChange = _ref5.onStateChange,\n      scenes = _ref5.scenes,\n      uriPrefix = _ref5.uriPrefix,\n      navigator = _ref5.navigator,\n      getSceneStyle = _ref5.getSceneStyle,\n      children = _ref5.children,\n      onDeepLink = _ref5.onDeepLink,\n      wrapBy = _ref5.wrapBy,\n      props = (0, _objectWithoutProperties2.default)(_ref5, [\"createReducer\", \"sceneStyle\", \"onStateChange\", \"scenes\", \"uriPrefix\", \"navigator\", \"getSceneStyle\", \"children\", \"onDeepLink\", \"wrapBy\"]);\n\n  var data = _objectSpread({}, props);\n\n  if (getSceneStyle) {\n    data.cardStyle = getSceneStyle(props);\n  }\n\n  if (sceneStyle) {\n    data.cardStyle = sceneStyle;\n  }\n\n  var AppNavigator = scenes || navigator || _navigationStore.default.create(children, data, wrapBy);\n\n  _navigationStore.default.reducer = createReducer && createReducer(props);\n\n  if (onStateChange) {\n    _navigationStore.default.onStateChange = onStateChange;\n  }\n\n  return _react.default.createElement(App, (0, _extends2.default)({}, props, {\n    onDeepLink: onDeepLink,\n    navigator: AppNavigator,\n    uriPrefix: uriPrefix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }));\n};\n\nRouter.propTypes = {\n  onStateChange: _propTypes.default.func,\n  scenes: _propTypes.default.func,\n  navigator: _propTypes.default.func,\n  wrapBy: _propTypes.default.func,\n  getSceneStyle: _propTypes.default.func,\n  sceneStyle: _reactNative.ViewPropTypes.style,\n  createReducer: _propTypes.default.func,\n  children: _propTypes.default.element,\n  uriPrefix: _propTypes.default.string,\n  onDeepLink: _propTypes.default.func\n};\nRouter.defaultProps = {\n  onStateChange: null,\n  scenes: null,\n  navigator: null,\n  wrapBy: function wrapBy(props) {\n    return props;\n  },\n  getSceneStyle: null,\n  sceneStyle: null,\n  children: null,\n  uriPrefix: null,\n  onDeepLink: null\n};\nvar _default = Router;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/caka-/Documents/Projetos/app/node_modules/react-native-router-flux/src/Router.js"],"names":["App","onBackPress","navigationStore","pop","handleDeepURL","e","parseDeepURL","url","cleanUrl","props","uriPrefix","split","allPaths","Object","values","states","map","obj","path","filter","parsedPath","params","actionKey","entries","value","key","find","onDeepLink","action","BackHandler","addEventListener","backAndroidHandler","Linking","getInitialURL","then","removeEventListener","dispatch","state","AppNavigator","navigator","externalDispatch","externalState","navigatorRef","setTopLevelNavigator","onNavigationStateChange","React","Component","propTypes","PropTypes","func","string","defaultProps","Router","createReducer","sceneStyle","onStateChange","scenes","getSceneStyle","children","wrapBy","data","cardStyle","create","reducer","ViewPropTypes","style","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ViewPropTypes, BackHandler, Linking } from 'react-native';\nimport PropTypes from 'prop-types';\nimport navigationStore from './navigationStore';\nimport pathParser from './pathParser';\n\nclass App extends React.Component {\n  static propTypes = {\n    navigator: PropTypes.func,\n    backAndroidHandler: PropTypes.func,\n    uriPrefix: PropTypes.string,\n    onDeepLink: PropTypes.func,\n  };\n\n  static defaultProps = {\n    navigator: null,\n    backAndroidHandler: null,\n    uriPrefix: null,\n    onDeepLink: null,\n  };\n\n  componentDidMount() {\n    BackHandler.addEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);\n\n    // If the app was \"woken up\" by an external route.\n    Linking.getInitialURL().then(url => this.parseDeepURL(url));\n    // Add an event listener for further deep linking.\n    Linking.addEventListener('url', this.handleDeepURL);\n  }\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);\n    Linking.removeEventListener('url', this.handleDeepURL);\n  }\n\n  onBackPress = () => navigationStore.pop();\n\n  handleDeepURL = e => this.parseDeepURL(e.url);\n\n  parseDeepURL = (url) => {\n    // If there is no url, then return.\n    if (!url) {\n      return;\n    }\n\n    // Clean the url with the given prefix.\n    const cleanUrl = this.props.uriPrefix ? url.split(this.props.uriPrefix)[1] : url;\n    // Skip for uriPrefix which not registered\n    if (!cleanUrl) {\n      return;\n    }\n    // Build an array of paths for every scene.\n    const allPaths = Object.values(navigationStore.states)\n      .map(obj => obj.path)\n      .filter(path => path);\n    // Try to match the url against the set of paths and parse the url parameters.\n    const parsedPath = pathParser(cleanUrl, allPaths);\n\n    // If the url could not be matched, then return.\n    if (!parsedPath) {\n      return;\n    }\n\n    // Destructure the matched path and the parsed url parameters.\n    const { path, params } = parsedPath;\n\n    // Get the action from the scene associated with the matched path.\n    const actionKey = Object.entries(navigationStore.states)\n      .filter(([, value]) => value.path === path)\n      .map(([key]) => key)\n      .find(key => key);\n\n    if (this.props.onDeepLink) {\n      this.props.onDeepLink({ url, action: actionKey, params });\n    } else if (actionKey && navigationStore[actionKey]) {\n      // Call the action associated with the scene's path with the parsed parameters.\n      navigationStore[actionKey](params);\n    }\n  };\n\n  render() {\n    const { dispatch, state, navigator: AppNavigator } = this.props;\n    if (dispatch && state) {\n      navigationStore.externalDispatch = dispatch;\n      navigationStore.externalState = state;\n      return (\n        <AppNavigator\n          dispatch={navigationStore.dispatch}\n          state={navigationStore.state}\n          ref={(navigatorRef) => {\n            navigationStore.setTopLevelNavigator(navigatorRef);\n          }}\n        />\n      );\n    }\n    return (\n      <AppNavigator\n        onNavigationStateChange={navigationStore.onNavigationStateChange}\n        ref={(navigatorRef) => {\n          navigationStore.setTopLevelNavigator(navigatorRef);\n        }}\n      />\n    );\n  }\n}\n\nconst Router = ({\n  createReducer, sceneStyle, onStateChange, scenes, uriPrefix, navigator, getSceneStyle, children, onDeepLink, wrapBy, ...props\n}) => {\n  const data = { ...props };\n  if (getSceneStyle) {\n    data.cardStyle = getSceneStyle(props);\n  }\n  if (sceneStyle) {\n    data.cardStyle = sceneStyle;\n  }\n  const AppNavigator = scenes || navigator || navigationStore.create(children, data, wrapBy);\n  navigationStore.reducer = createReducer && createReducer(props);\n  if (onStateChange) {\n    navigationStore.onStateChange = onStateChange;\n  }\n  return <App {...props} onDeepLink={onDeepLink} navigator={AppNavigator} uriPrefix={uriPrefix} />;\n};\nRouter.propTypes = {\n  onStateChange: PropTypes.func,\n  scenes: PropTypes.func,\n  navigator: PropTypes.func,\n  wrapBy: PropTypes.func,\n  getSceneStyle: PropTypes.func,\n  sceneStyle: ViewPropTypes.style,\n  createReducer: PropTypes.func,\n  children: PropTypes.element,\n  uriPrefix: PropTypes.string,\n  onDeepLink: PropTypes.func,\n};\nRouter.defaultProps = {\n  onStateChange: null,\n  scenes: null,\n  navigator: null,\n  wrapBy: props => props,\n  getSceneStyle: null,\n  sceneStyle: null,\n  children: null,\n  uriPrefix: null,\n  onDeepLink: null,\n};\n\nexport default Router;\n"]},"metadata":{},"sourceType":"script"}